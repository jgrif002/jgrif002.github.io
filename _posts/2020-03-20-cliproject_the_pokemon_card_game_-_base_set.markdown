---
layout: post
title:      "CLIproject	“The Pokemon Card Game - Base Set”"
date:       2020-03-20 04:02:05 +0000
permalink:  cliproject_the_pokemon_card_game_-_base_set
---




Here we are two months later and I am wondering what the heck just happened.  I found myself building a CLI app with Ruby utilizing an API to gather data.  The project started out simple enough with fairly straight forward requirements.  We had to have a CLI interfacing with the app, pull data from an external source using web scraping or an API and the data provided must go two levels deep while remaining pretty DRY. What could go wrong for a 2 month old newbie programmer?

I love Pokemon so when I found a free The Pokemon Card game API I fell in love.  I started my project by actually writing my workflow in VS Code.  I wanted to put on paper what I was trying to accomplish.  I needed to first figure out how to collect clean data to work with.  Then I wanted to be able to search the collection for a specific card.  From there I wanted to make sure the user could look up some details about that card, specifically it’s type, attacks, weaknesses and rarity. I wanted the user to have the choice from there to either continue to look up more “attributes” of that card, look up a new “Pokemon” card or, if they really wanted to, “exit” the program. 

When using the API to gather the data I specifically wanted to look up cards in the “Base set” which is the first set ever released by The Pokemon Company. I was able to use a specific URL in the API that could call that specific set.  From there it gave me an array called “cards” which contained hashes of data.  When calling specifically the “Base Set” URL the “cards” array only contained one hash which was indeed the set of cards I needed.  From there it was easy to iterate through that hash because the hash was cleanly parsed by the API with the keys paired neatly with their respective return value.  I just needed to iterate through the hash and pull the right key to return the right value.  Once that was all cleaned up I instantiated a Pokemon card with a name, type, attacks, weaknesses and rarity while initializing it and saving it in an array just in case I wanted to view it later for another use.  From here it was time to work through the users CLI interface.

Let’s take a second here and just say I need to have a long thank you speech for the classmates at Flatiron that helped, my cohort lead and also the members on Discord that managed “The Pokemon Card Game” API.  We all collaborated and it really helped a ton working with other team members. The community is clearly strong and I am thankful for that.  

From here setting up the CLI was pretty straight forward (for the most part.)  The “Baset Set” data was cleanly set up for take off.  The first step in the CLI was welcoming the user to the app.  The second was asking the user for a name of the card they wanted to look up.  After the user gives their input we need to validate that data.  We use an “if” statement to verify if the input is valid or not.  If the card input wasn’t found in the “cards” array of hashes either because it was spelled wrong or it is not part of the “base set” the user is returned an error and asked to try again.  Once the user searched for a card that was in the base set, the app would ask the user to enter either  “type”, “attacks”, “weaknesses” or lastly “rarity” to learn more.  After the user entered one of those commands, it would return the value associated to that key of that instance of a Pokemon Card. If the user inputted an attribute other than the four listed it would ask the user to double check and try again.  From there the user is asked if they want to look up more “attributes” of that card, search for another “Pokemon” Card or they could also “exit” and leave the app.  If the user chooses “attributes” they are sent back to the “options” method where they will choose another “attribute” to look up.  If they chose “Pokemon” they were looped back to the start of the program to start from the beginning.  If they wanted to “exit” the program the application would exit and wish them farewell with a kind thank you. 

I had a hard time with my first project mainly because it was my first time diving back into school in a long while.  I am having to make sure I keep up good study habits while maintaining a full time job and some sort of normalcy outside of work and school.  Going into my second module I understand that I need to practice more, work with others more and really immerse myself in more of what I am currently working on with additional materials.  Lastly, I also need to further cement the topics I have learned by actively seeking out more practice with past materials. I am looking forward to the next challenge! #thisistheway. 

